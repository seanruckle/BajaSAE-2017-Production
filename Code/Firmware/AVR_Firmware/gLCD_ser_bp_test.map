Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                              serial.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
                              ui.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              lcd.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              glcdbp.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy_P.o)
                              demo.o (strcpy_P)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                              nvm.o (__eerd_byte_m168)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                              nvm.o (__eewr_byte_m168)

Allocating common symbols
Common symbol       size              file

rxRingBuffer        0x100             glcdbp.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
LOAD glcdbp.o
LOAD t6963.o
LOAD serial.o
LOAD interrupts.o
LOAD ks0108b.o
LOAD lcd.o
LOAD io_support.o
LOAD ui.o
LOAD nvm.o
LOAD demo.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x2930
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000068       0x34 ui.o
                0x000000000000009c                . = ALIGN (0x2)
                0x000000000000009c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000009c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000009c                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x000000000000009c      0xeef lcd.o
 .progmem.data  0x0000000000000f8b       0xdd demo.o
                0x0000000000001068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000001068                __ctors_start = .
 *(.ctors)
                0x0000000000001068                __ctors_end = .
                0x0000000000001068                __dtors_start = .
 *(.dtors)
                0x0000000000001068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000001068        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
                0x0000000000001068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000001068        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000001074       0x16 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x0000000000001074                __do_copy_data
 .init4         0x000000000000108a       0x10 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x000000000000108a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000109a        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000010a2        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
                0x00000000000010a2                __vector_22
                0x00000000000010a2                __vector_1
                0x00000000000010a2                __vector_24
                0x00000000000010a2                __vector_12
                0x00000000000010a2                __bad_interrupt
                0x00000000000010a2                __vector_6
                0x00000000000010a2                __vector_3
                0x00000000000010a2                __vector_23
                0x00000000000010a2                __vector_25
                0x00000000000010a2                __vector_11
                0x00000000000010a2                __vector_13
                0x00000000000010a2                __vector_17
                0x00000000000010a2                __vector_19
                0x00000000000010a2                __vector_7
                0x00000000000010a2                __vector_5
                0x00000000000010a2                __vector_4
                0x00000000000010a2                __vector_9
                0x00000000000010a2                __vector_2
                0x00000000000010a2                __vector_21
                0x00000000000010a2                __vector_15
                0x00000000000010a2                __vector_8
                0x00000000000010a2                __vector_14
                0x00000000000010a2                __vector_10
                0x00000000000010a2                __vector_16
                0x00000000000010a2                __vector_20
 .text          0x00000000000010a6       0x28 glcdbp.o
                0x00000000000010a6                timerInit
 .text          0x00000000000010ce      0x29e t6963.o
                0x00000000000010ce                t6963ReadStatus
                0x00000000000010f0                t6963BusyWait
                0x00000000000010fa                t6963WriteData
                0x0000000000001138                t6963ReadData
                0x0000000000001162                t6963WriteCmd
                0x00000000000011a4                t6963SetPointer
                0x00000000000011d2                t6963Clear
                0x0000000000001206                t6963DisplayInit
                0x0000000000001236                t6963BitSR
                0x000000000000123e                t6963DrawPixel
                0x000000000000127e                t6963ReadBlock
 .text          0x000000000000136c      0x13c serial.o
                0x000000000000136c                serialInit
                0x0000000000001388                putChar
                0x0000000000001396                putHex
                0x00000000000013c0                putDec
                0x000000000000140e                putBin
                0x0000000000001430                putLine
                0x0000000000001452                serialBufferPop
                0x0000000000001492                clearBuffer
 .text          0x00000000000014a8       0x6e interrupts.o
                0x00000000000014a8                __vector_18
 .text          0x0000000000001516      0x2c2 ks0108b.o
                0x0000000000001516                ks0108bReset
                0x0000000000001540                strobeEN
                0x000000000000155e                setPinsDefault
                0x0000000000001568                ks0108bDisplayOn
                0x0000000000001580                ks0108bSetStartLine
                0x0000000000001598                ks0108bSetColumn
                0x00000000000015b6                ks0108bSetPage
                0x00000000000015d0                ks0108bWriteData
                0x000000000000160e                ks0108bClear
                0x0000000000001658                ks0108bReadData
                0x00000000000016b0                ks0108bReadBlock
                0x0000000000001764                ks0108bDrawPixel
 .text          0x00000000000017d8      0xa06 lcd.o
                0x00000000000017d8                lcdConfig
                0x0000000000001808                lcdClearScreen
                0x0000000000001830                lcdDrawPixel
                0x0000000000001866                lcdDrawLine
                0x0000000000001a6a                lcdDrawBox
                0x0000000000001ab6                lcdDrawCircle
                0x0000000000001bb6                lcdDrawChar
                0x0000000000001df4                lcdEraseBlock
                0x0000000000001e4e                lcdDrawLogo
                0x0000000000001f0e                lcdGetDataBlock
                0x0000000000001f1e                lcdDrawSprite
                0x000000000000212c                lcdDrawBig
 .text          0x00000000000021de       0x70 io_support.o
                0x00000000000021de                ioInit
                0x00000000000021fc                setData
                0x0000000000002228                readData
                0x0000000000002240                hiZDataPins
 .text          0x000000000000224e      0x332 ui.o
                0x000000000000224e                uiStateMachine
 .text          0x0000000000002580       0x6c nvm.o
                0x0000000000002580                toggleSplash
                0x0000000000002594                getSplash
                0x000000000000259c                toggleReverse
                0x00000000000025b2                getReverse
                0x00000000000025be                setBaudRate
                0x00000000000025d2                getBaudRate
                0x00000000000025da                setBacklightLevel
                0x00000000000025e4                getBacklightLevel
 .text          0x00000000000025ec      0x1fe demo.o
                0x00000000000025ec                demo
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy_P.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .text          0x00000000000027ea        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                0x00000000000027ea                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000027ea       0xe4 glcdbp.o
                0x00000000000027ea                main
 .text.libgcc.mul
                0x00000000000028ce        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x00000000000028ce       0x18 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                0x00000000000028ce                __udivmodqi4
 .text.libgcc   0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000028e6        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000028e6        0xc /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
                0x00000000000028e6                __tablejump2__
                0x00000000000028ea                __tablejump__
 .text.libgcc.prologue
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000028f2        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000028f2        0xe /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy_P.o)
                0x00000000000028f2                strcpy_P
 .text.avr-libc
                0x0000000000002900       0x10 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                0x0000000000002900                __eerd_byte_m168
 .text.avr-libc
                0x0000000000002910       0x1c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                0x0000000000002910                __eewr_byte_m168
                0x0000000000002912                __eewr_r18_m168
                0x000000000000292c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000292c        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x000000000000292c                exit
                0x000000000000292c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000292c        0x4 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000002930                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000002930
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 glcdbp.o
 .data          0x0000000000800100        0x0 t6963.o
 .data          0x0000000000800100        0x0 serial.o
 .data          0x0000000000800100        0x0 interrupts.o
 .data          0x0000000000800100        0x0 ks0108b.o
 .data          0x0000000000800100        0x2 lcd.o
                0x0000000000800100                yDim
                0x0000000000800101                xDim
 .data          0x0000000000800102        0x0 io_support.o
 .data          0x0000000000800102        0x0 ui.o
 .data          0x0000000000800102        0x0 nvm.o
 .data          0x0000000000800102        0x0 demo.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy_P.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102      0x10e
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800102        0x7 glcdbp.o
                0x0000000000800102                reverse
                0x0000000000800103                rxRingTail
                0x0000000000800105                rxRingHead
                0x0000000000800107                bufferSize
                0x0000000000800108                display
 .bss           0x0000000000800109        0x0 t6963.o
 .bss           0x0000000000800109        0x0 serial.o
 .bss           0x0000000000800109        0x0 interrupts.o
 .bss           0x0000000000800109        0x1 ks0108b.o
                0x0000000000800109                column
 .bss           0x000000000080010a        0x6 lcd.o
                0x000000000080010a                textLength
                0x000000000080010c                textOrigin
                0x000000000080010e                cursorPos
 .bss           0x0000000000800110        0x0 io_support.o
 .bss           0x0000000000800110        0x0 ui.o
 .bss           0x0000000000800110        0x0 nvm.o
 .bss           0x0000000000800110        0x0 demo.o
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy_P.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800110      0x100 glcdbp.o
                0x0000000000800110                rxRingBuffer
                0x0000000000800210                PROVIDE (__bss_end, .)
                0x0000000000002930                __data_load_start = LOADADDR (.data)
                0x0000000000002932                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800210        0x0
                0x0000000000800210                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800210                PROVIDE (__noinit_end, .)
                0x0000000000800210                _end = .
                0x0000000000800210                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 glcdbp.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 t6963.o
 .comment       0x0000000000000000       0x12 serial.o
 .comment       0x0000000000000000       0x12 interrupts.o
 .comment       0x0000000000000000       0x12 ks0108b.o
 .comment       0x0000000000000000       0x12 lcd.o
 .comment       0x0000000000000000       0x12 io_support.o
 .comment       0x0000000000000000       0x12 ui.o
 .comment       0x0000000000000000       0x12 nvm.o
 .comment       0x0000000000000000       0x12 demo.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x148
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 glcdbp.o
 .debug_aranges
                0x0000000000000028       0x20 t6963.o
 .debug_aranges
                0x0000000000000048       0x20 serial.o
 .debug_aranges
                0x0000000000000068       0x20 interrupts.o
 .debug_aranges
                0x0000000000000088       0x20 ks0108b.o
 .debug_aranges
                0x00000000000000a8       0x20 lcd.o
 .debug_aranges
                0x00000000000000c8       0x20 io_support.o
 .debug_aranges
                0x00000000000000e8       0x20 ui.o
 .debug_aranges
                0x0000000000000108       0x20 nvm.o
 .debug_aranges
                0x0000000000000128       0x20 demo.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x3838
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4be glcdbp.o
 .debug_info    0x00000000000004be      0x83f t6963.o
 .debug_info    0x0000000000000cfd      0x304 serial.o
 .debug_info    0x0000000000001001       0xd7 interrupts.o
 .debug_info    0x00000000000010d8      0x905 ks0108b.o
 .debug_info    0x00000000000019dd      0xee6 lcd.o
 .debug_info    0x00000000000028c3      0x113 io_support.o
 .debug_info    0x00000000000029d6      0x576 ui.o
 .debug_info    0x0000000000002f4c      0x2bd nvm.o
 .debug_info    0x0000000000003209      0x62f demo.o

.debug_abbrev   0x0000000000000000     0x1112
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1c4 glcdbp.o
 .debug_abbrev  0x00000000000001c4      0x292 t6963.o
 .debug_abbrev  0x0000000000000456      0x166 serial.o
 .debug_abbrev  0x00000000000005bc       0x79 interrupts.o
 .debug_abbrev  0x0000000000000635      0x2d5 ks0108b.o
 .debug_abbrev  0x000000000000090a      0x2c7 lcd.o
 .debug_abbrev  0x0000000000000bd1       0xcc io_support.o
 .debug_abbrev  0x0000000000000c9d      0x194 ui.o
 .debug_abbrev  0x0000000000000e31       0xfc nvm.o
 .debug_abbrev  0x0000000000000f2d      0x1e5 demo.o

.debug_line     0x0000000000000000      0xc0c
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x126 glcdbp.o
 .debug_line    0x0000000000000126      0x1c0 t6963.o
 .debug_line    0x00000000000002e6       0xac serial.o
 .debug_line    0x0000000000000392       0x65 interrupts.o
 .debug_line    0x00000000000003f7      0x19f ks0108b.o
 .debug_line    0x0000000000000596      0x2be lcd.o
 .debug_line    0x0000000000000854       0x7e io_support.o
 .debug_line    0x00000000000008d2      0x141 ui.o
 .debug_line    0x0000000000000a13       0x8f nvm.o
 .debug_line    0x0000000000000aa2      0x16a demo.o

.debug_frame    0x0000000000000000      0x88c
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x34 glcdbp.o
 .debug_frame   0x0000000000000034      0x164 t6963.o
 .debug_frame   0x0000000000000198       0xd4 serial.o
 .debug_frame   0x000000000000026c       0x54 interrupts.o
 .debug_frame   0x00000000000002c0      0x160 ks0108b.o
 .debug_frame   0x0000000000000420      0x2e0 lcd.o
 .debug_frame   0x0000000000000700       0x54 io_support.o
 .debug_frame   0x0000000000000754       0x44 ui.o
 .debug_frame   0x0000000000000798       0x94 nvm.o
 .debug_frame   0x000000000000082c       0x60 demo.o

.debug_str      0x0000000000000000      0x7ce
 *(.debug_str)
 .debug_str     0x0000000000000000      0x2f1 glcdbp.o
                                        0x32a (size before relaxing)
 .debug_str     0x00000000000002f1      0x122 t6963.o
                                        0x2af (size before relaxing)
 .debug_str     0x0000000000000413       0x5d serial.o
                                        0x1f1 (size before relaxing)
 .debug_str     0x0000000000000470       0x19 interrupts.o
                                        0x176 (size before relaxing)
 .debug_str     0x0000000000000489      0x125 ks0108b.o
                                        0x323 (size before relaxing)
 .debug_str     0x00000000000005ae      0x125 lcd.o
                                        0x39d (size before relaxing)
 .debug_str     0x00000000000006d3        0xd io_support.o
                                        0x17f (size before relaxing)
 .debug_str     0x00000000000006e0       0x49 ui.o
                                        0x2e3 (size before relaxing)
 .debug_str     0x0000000000000729       0x3f nvm.o
                                        0x1d8 (size before relaxing)
 .debug_str     0x0000000000000768       0x66 demo.o
                                        0x2a5 (size before relaxing)

.debug_loc      0x0000000000000000     0x309b
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x29 glcdbp.o
 .debug_loc     0x0000000000000029      0x5cf t6963.o
 .debug_loc     0x00000000000005f8      0x413 serial.o
 .debug_loc     0x0000000000000a0b       0x7d interrupts.o
 .debug_loc     0x0000000000000a88      0x4c2 ks0108b.o
 .debug_loc     0x0000000000000f4a     0x1a9c lcd.o
 .debug_loc     0x00000000000029e6       0x53 io_support.o
 .debug_loc     0x0000000000002a39      0x335 ui.o
 .debug_loc     0x0000000000002d6e       0xa8 nvm.o
 .debug_loc     0x0000000000002e16      0x285 demo.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000      0x180
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 glcdbp.o
 .debug_ranges  0x0000000000000018       0x60 t6963.o
 .debug_ranges  0x0000000000000078      0x108 lcd.o

.debug_macro
 *(.debug_macro)
OUTPUT(gLCD_ser_bp_test.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__bss_end                                         /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                                                  lcd.o
                                                  ks0108b.o
                                                  glcdbp.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                                                  lcd.o
__eerd_byte_m168                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eerd_byte_atmega168.o)
                                                  nvm.o
__eewr_byte_m168                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
                                                  nvm.o
__eewr_r18_m168                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(eewr_byte_atmega168.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__tablejump2__                                    /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
                                                  ui.o
__tablejump__                                     /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_tablejump.o)
__udivmodqi4                                      /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodqi4.o)
                                                  serial.o
__vector_1                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_10                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_11                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_12                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_13                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_14                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_15                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_16                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_17                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_18                                       interrupts.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_19                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_20                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_21                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_22                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_23                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_24                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_25                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_6                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_7                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_8                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
_exit                                             /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
bufferSize                                        glcdbp.o
                                                  ui.o
                                                  interrupts.o
                                                  serial.o
clearBuffer                                       serial.o
                                                  glcdbp.o
column                                            ks0108b.o
cursorPos                                         lcd.o
                                                  demo.o
                                                  ui.o
demo                                              demo.o
display                                           glcdbp.o
                                                  io_support.o
                                                  lcd.o
exit                                              /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
getBacklightLevel                                 nvm.o
                                                  glcdbp.o
getBaudRate                                       nvm.o
                                                  glcdbp.o
getReverse                                        nvm.o
                                                  glcdbp.o
getSplash                                         nvm.o
                                                  glcdbp.o
hiZDataPins                                       io_support.o
                                                  ks0108b.o
ioInit                                            io_support.o
                                                  glcdbp.o
ks0108bClear                                      ks0108b.o
                                                  lcd.o
ks0108bDisplayOn                                  ks0108b.o
                                                  lcd.o
ks0108bDrawPixel                                  ks0108b.o
                                                  lcd.o
ks0108bReadBlock                                  ks0108b.o
                                                  lcd.o
ks0108bReadData                                   ks0108b.o
ks0108bReset                                      ks0108b.o
                                                  lcd.o
ks0108bSetColumn                                  ks0108b.o
ks0108bSetPage                                    ks0108b.o
ks0108bSetStartLine                               ks0108b.o
ks0108bWriteData                                  ks0108b.o
lcdClearScreen                                    lcd.o
                                                  demo.o
                                                  ui.o
                                                  glcdbp.o
lcdConfig                                         lcd.o
                                                  glcdbp.o
lcdDrawBig                                        lcd.o
                                                  ui.o
lcdDrawBox                                        lcd.o
                                                  ui.o
lcdDrawChar                                       lcd.o
                                                  demo.o
                                                  glcdbp.o
lcdDrawCircle                                     lcd.o
                                                  demo.o
                                                  ui.o
lcdDrawLine                                       lcd.o
                                                  ui.o
lcdDrawLogo                                       lcd.o
                                                  glcdbp.o
lcdDrawPixel                                      lcd.o
                                                  ui.o
lcdDrawSprite                                     lcd.o
                                                  demo.o
                                                  ui.o
lcdEraseBlock                                     lcd.o
                                                  demo.o
                                                  ui.o
lcdGetDataBlock                                   lcd.o
main                                              glcdbp.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm168.o
putBin                                            serial.o
putChar                                           serial.o
putDec                                            serial.o
putHex                                            serial.o
putLine                                           serial.o
readData                                          io_support.o
                                                  ks0108b.o
                                                  t6963.o
reverse                                           glcdbp.o
                                                  ui.o
                                                  lcd.o
                                                  ks0108b.o
                                                  t6963.o
rxRingBuffer                                      glcdbp.o
                                                  interrupts.o
                                                  serial.o
rxRingHead                                        glcdbp.o
                                                  interrupts.o
                                                  serial.o
rxRingTail                                        glcdbp.o
                                                  serial.o
serialBufferPop                                   serial.o
                                                  ui.o
                                                  glcdbp.o
serialInit                                        serial.o
                                                  ui.o
                                                  glcdbp.o
setBacklightLevel                                 nvm.o
                                                  ui.o
setBaudRate                                       nvm.o
                                                  ui.o
                                                  glcdbp.o
setData                                           io_support.o
                                                  ks0108b.o
                                                  t6963.o
setPinsDefault                                    ks0108b.o
strcpy_P                                          /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy_P.o)
                                                  demo.o
strobeEN                                          ks0108b.o
t6963BitSR                                        t6963.o
t6963BusyWait                                     t6963.o
t6963Clear                                        t6963.o
                                                  lcd.o
t6963DisplayInit                                  t6963.o
                                                  lcd.o
t6963DrawPixel                                    t6963.o
                                                  lcd.o
t6963ReadBlock                                    t6963.o
                                                  lcd.o
t6963ReadData                                     t6963.o
t6963ReadStatus                                   t6963.o
t6963SetPointer                                   t6963.o
t6963WriteCmd                                     t6963.o
t6963WriteData                                    t6963.o
textLength                                        lcd.o
                                                  ui.o
textOrigin                                        lcd.o
                                                  ui.o
timerInit                                         glcdbp.o
toggleReverse                                     nvm.o
                                                  ui.o
toggleSplash                                      nvm.o
                                                  ui.o
uiStateMachine                                    ui.o
                                                  glcdbp.o
xDim                                              lcd.o
                                                  demo.o
                                                  ui.o
yDim                                              lcd.o
                                                  demo.o
                                                  ui.o
